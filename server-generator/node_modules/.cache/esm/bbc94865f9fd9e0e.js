let mongoose,MONGO_HOST,MONGO_PORT,MONGODB_DATABASE,MONGODB_USER,MONGODB_PASSWORD;_f9f‍.x([["dbConnect",()=>dbConnect]]);_f9f‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_f9f‍.w("../config",[["MONGO_HOST",["MONGO_HOST"],function(v){MONGO_HOST=v}],["MONGO_PORT",["MONGO_PORT"],function(v){MONGO_PORT=v}],["MONGODB_DATABASE",["MONGODB_DATABASE"],function(v){MONGODB_DATABASE=v}],["MONGODB_USER",["MONGODB_USER"],function(v){MONGODB_USER=v}],["MONGODB_PASSWORD",["MONGODB_PASSWORD"],function(v){MONGODB_PASSWORD=v}]]);








const connect = () => {
  return mongoose.connect(
    // `mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/${MONGODB_DATABASE}`
    `mongodb://${MONGO_HOST}:${MONGO_PORT}/${MONGODB_DATABASE}`
    , {
      user: MONGODB_USER,
      pass: MONGODB_PASSWORD,
      useNewUrlParser: true,
      useFindAndModify: false,
      useCreateIndex: true,
    })
}


       const dbConnect = () => {
  connect()
  const db = mongoose.connection

  db.on('error', () => {
    _f9f‍.g.console.error.bind(_f9f‍.g.console, 'DB error: ')
    setInterval(() => {
      connect()
    }, 5000)
  })
  db.once('open', () => {
    console.log('    DB connect');
  })
  db.on('disconnected', () => {
    console.error('    DB reconnect')
    setInterval(() => {
      connect()
    }, 5000)
  })
}
